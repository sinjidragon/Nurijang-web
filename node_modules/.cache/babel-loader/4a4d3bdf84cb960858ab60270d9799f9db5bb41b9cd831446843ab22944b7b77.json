{"ast":null,"code":"export const fetchNearbyFacilities = async location => {\n  const response = await fetch('/facilities', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      fcltyCrdntLo: location.lng,\n      fcltyCrdntLa: location.lat\n    })\n  });\n  if (!response.ok) throw new Error('시설 정보를 가져오는데 실패했습니다.');\n  return response.json();\n};\nexport const fetchSuggestions = async (searchText, location) => {\n  const response = await fetch('/suggestions', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      fcltyCrdntLo: location.lng,\n      fcltyCrdntLa: location.lat,\n      searchText\n    })\n  });\n  if (!response.ok) throw new Error('Failed to fetch suggestions');\n  return response.json();\n};","map":{"version":3,"names":["fetchNearbyFacilities","location","response","fetch","method","headers","body","JSON","stringify","fcltyCrdntLo","lng","fcltyCrdntLa","lat","ok","Error","json","fetchSuggestions","searchText"],"sources":["/Users/dgsw01/Documents/GitHub/Nurijang-web/src/services/api.js"],"sourcesContent":["export const fetchNearbyFacilities = async (location) => {\n    const response = await fetch('/facilities', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        fcltyCrdntLo: location.lng,\n        fcltyCrdntLa: location.lat\n      })\n    });\n  \n    if (!response.ok) throw new Error('시설 정보를 가져오는데 실패했습니다.');\n    return response.json();\n  };\n  \n  export const fetchSuggestions = async (searchText, location) => {\n    const response = await fetch('/suggestions', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        fcltyCrdntLo: location.lng,\n        fcltyCrdntLa: location.lat,\n        searchText\n      })\n    });\n  \n    if (!response.ok) throw new Error('Failed to fetch suggestions');\n    return response.json();\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,MAAOC,QAAQ,IAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;IAC1CC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,YAAY,EAAER,QAAQ,CAACS,GAAG;MAC1BC,YAAY,EAAEV,QAAQ,CAACW;IACzB,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzD,OAAOZ,QAAQ,CAACa,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,UAAU,EAAEhB,QAAQ,KAAK;EAC9D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;IAC3CC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,YAAY,EAAER,QAAQ,CAACS,GAAG;MAC1BC,YAAY,EAAEV,QAAQ,CAACW,GAAG;MAC1BK;IACF,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACf,QAAQ,CAACW,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChE,OAAOZ,QAAQ,CAACa,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}