{"ast":null,"code":"const searchCurrentLocation = useCallback(async () => {\n  var _mapRef$current, _mapRef$current$state;\n  if (!((_mapRef$current = mapRef.current) !== null && _mapRef$current !== void 0 && (_mapRef$current$state = _mapRef$current.state) !== null && _mapRef$current$state !== void 0 && _mapRef$current$state.map)) return;\n  setLoading(true);\n  setError(null);\n  try {\n    const map = mapRef.current.state.map;\n    const center = map.getCenter();\n    const location = {\n      lat: center.lat(),\n      lng: center.lng()\n    };\n    setUserLocation(location); // 이 줄 추가\n\n    const data = await fetchNearbyFacilities(location);\n    setFacilities(data);\n  } catch (error) {\n    setError(\"현재 지도 위치에서 시설을 검색하는데 실패했습니다.\");\n  } finally {\n    setLoading(false);\n  }\n}, []);","map":{"version":3,"names":["searchCurrentLocation","useCallback","_mapRef$current","_mapRef$current$state","mapRef","current","state","map","setLoading","setError","center","getCenter","location","lat","lng","setUserLocation","data","fetchNearbyFacilities","setFacilities","error"],"sources":["/Users/dgsw01/Documents/GitHub/Nurijang-web/src/hooks/useMapState.js"],"sourcesContent":["const searchCurrentLocation = useCallback(async () => {\n  if (!mapRef.current?.state?.map) return;\n      \n  setLoading(true);\n  setError(null);\n  try {\n    const map = mapRef.current.state.map;\n    const center = map.getCenter();\n    const location = {\n      lat: center.lat(),\n      lng: center.lng()\n    };\n    setUserLocation(location);  // 이 줄 추가\n        \n    const data = await fetchNearbyFacilities(location);\n    setFacilities(data);\n  } catch (error) {\n    setError(\"현재 지도 위치에서 시설을 검색하는데 실패했습니다.\");\n  } finally {\n    setLoading(false);\n  }\n}, []);"],"mappings":"AAAA,MAAMA,qBAAqB,GAAGC,WAAW,CAAC,YAAY;EAAA,IAAAC,eAAA,EAAAC,qBAAA;EACpD,IAAI,GAAAD,eAAA,GAACE,MAAM,CAACC,OAAO,cAAAH,eAAA,gBAAAC,qBAAA,GAAdD,eAAA,CAAgBI,KAAK,cAAAH,qBAAA,eAArBA,qBAAA,CAAuBI,GAAG,GAAE;EAEjCC,UAAU,CAAC,IAAI,CAAC;EAChBC,QAAQ,CAAC,IAAI,CAAC;EACd,IAAI;IACF,MAAMF,GAAG,GAAGH,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG;IACpC,MAAMG,MAAM,GAAGH,GAAG,CAACI,SAAS,CAAC,CAAC;IAC9B,MAAMC,QAAQ,GAAG;MACfC,GAAG,EAAEH,MAAM,CAACG,GAAG,CAAC,CAAC;MACjBC,GAAG,EAAEJ,MAAM,CAACI,GAAG,CAAC;IAClB,CAAC;IACDC,eAAe,CAACH,QAAQ,CAAC,CAAC,CAAE;;IAE5B,MAAMI,IAAI,GAAG,MAAMC,qBAAqB,CAACL,QAAQ,CAAC;IAClDM,aAAa,CAACF,IAAI,CAAC;EACrB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdV,QAAQ,CAAC,8BAA8B,CAAC;EAC1C,CAAC,SAAS;IACRD,UAAU,CAAC,KAAK,CAAC;EACnB;AACF,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}