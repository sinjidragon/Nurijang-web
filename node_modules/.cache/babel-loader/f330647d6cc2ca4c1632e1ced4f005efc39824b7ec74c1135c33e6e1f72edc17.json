{"ast":null,"code":"var _jsxFileName = \"/Users/dgsw01/Desktop/nurijang/nurijang/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useCallback } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [center, setCenter] = useState({\n    lat: 37.5665,\n    lng: 126.9780\n  });\n  const [facilities, setFacilities] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n\n  // 현재 위치 가져오기\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const location = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(location);\n        setCenter(location);\n        fetchNearbyFacilities(location);\n      }, error => {\n        console.error(\"Error getting location:\", error);\n        alert(\"위치 정보를 가져올 수 없습니다.\");\n      });\n    } else {\n      alert(\"이 브라우저에서는 위치 정보를 사용할 수 없습니다.\");\n    }\n  };\n\n  // 주변 시설 정보 가져오기\n  const fetchNearbyFacilities = async location => {\n    try {\n      const response = await fetch('YOUR_API_ENDPOINT', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fcltyCrdntLo: location.lng,\n          fcltyCrdntLa: location.lat\n        })\n      });\n      const data = await response.json();\n      setFacilities(data);\n    } catch (error) {\n      console.error(\"Error fetching facilities:\", error);\n      alert(\"시설 정보를 불러오는데 실패했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC2DC\\uC124\\uBA85 \\uD639\\uC740 \\uC8FC\\uC18C \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"my-location-button\",\n      onClick: getCurrentLocation,\n      children: \"\\uB0B4 \\uC704\\uCE58 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyBR3XR176Wj4TBWWcH2qY_tungtmqpofVw\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapStyles,\n        zoom: 15,\n        center: center,\n        children: [userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: {\n            path: google.maps.SymbolPath.CIRCLE,\n            scale: 8,\n            fillColor: \"#4285F4\",\n            fillOpacity: 1,\n            strokeColor: \"#ffffff\",\n            strokeWeight: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), facilities.map(facility => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: facility.fcltyCrdntLa,\n            lng: facility.fcltyCrdntLo\n          },\n          onClick: () => {\n            // 마커 클릭 시 시설 정보 표시\n            // TODO: 시설 정보 카드 구현\n          }\n        }, facility.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J9+FSUNNso9Q1RUPLiJnCC/breQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","App","_s","center","setCenter","lat","lng","facilities","setFacilities","userLocation","setUserLocation","mapStyles","height","width","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","location","coords","latitude","longitude","fetchNearbyFacilities","error","console","alert","response","fetch","method","headers","body","JSON","stringify","fcltyCrdntLo","fcltyCrdntLa","data","json","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","googleMapsApiKey","mapContainerStyle","zoom","icon","path","google","maps","SymbolPath","CIRCLE","scale","fillColor","fillOpacity","strokeColor","strokeWeight","map","facility","id","_c","$RefreshReg$"],"sources":["/Users/dgsw01/Desktop/nurijang/nurijang/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useCallback } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport './App.css';\n\nconst App = () => {\n  const [center, setCenter] = useState({\n    lat: 37.5665,\n    lng: 126.9780\n  });\n  const [facilities, setFacilities] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n\n  // 현재 위치 가져오기\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const location = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          setUserLocation(location);\n          setCenter(location);\n          fetchNearbyFacilities(location);\n        },\n        (error) => {\n          console.error(\"Error getting location:\", error);\n          alert(\"위치 정보를 가져올 수 없습니다.\");\n        }\n      );\n    } else {\n      alert(\"이 브라우저에서는 위치 정보를 사용할 수 없습니다.\");\n    }\n  };\n\n  // 주변 시설 정보 가져오기\n  const fetchNearbyFacilities = async (location) => {\n    try {\n      const response = await fetch('YOUR_API_ENDPOINT', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          fcltyCrdntLo: location.lng,\n          fcltyCrdntLa: location.lat\n        })\n      });\n\n      const data = await response.json();\n      setFacilities(data);\n    } catch (error) {\n      console.error(\"Error fetching facilities:\", error);\n      alert(\"시설 정보를 불러오는데 실패했습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"search-bar\">\n        <input type=\"text\" placeholder=\"시설명 혹은 주소 검색\" />\n      </header>\n      \n      <button \n        className=\"my-location-button\"\n        onClick={getCurrentLocation}\n      >\n        내 위치 보기\n      </button>\n\n      <LoadScript googleMapsApiKey=\"AIzaSyBR3XR176Wj4TBWWcH2qY_tungtmqpofVw\">\n        <GoogleMap\n          mapContainerStyle={mapStyles}\n          zoom={15}\n          center={center}\n        >\n          {/* 사용자 위치 마커 */}\n          {userLocation && (\n            <Marker\n              position={userLocation}\n              icon={{\n                path: google.maps.SymbolPath.CIRCLE,\n                scale: 8,\n                fillColor: \"#4285F4\",\n                fillOpacity: 1,\n                strokeColor: \"#ffffff\",\n                strokeWeight: 2,\n              }}\n            />\n          )}\n\n          {/* 시설 마커들 */}\n          {facilities.map((facility) => (\n            <Marker\n              key={facility.id}\n              position={{\n                lat: facility.fcltyCrdntLa,\n                lng: facility.fcltyCrdntLo\n              }}\n              onClick={() => {\n                // 마커 클릭 시 시설 정보 표시\n                // TODO: 시설 정보 카드 구현\n              }}\n            />\n          ))}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}