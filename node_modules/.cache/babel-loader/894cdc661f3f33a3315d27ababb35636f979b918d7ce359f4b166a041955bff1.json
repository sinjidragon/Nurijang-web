{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useMarkerClusterer.js\nimport { useRef, useEffect } from 'react';\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\nconst createSvgClusterIcon = (size, color, opacity) => {\n  const svg = window.btoa(`\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle \n        cx=\"${size / 2}\" \n        cy=\"${size / 2}\" \n        r=\"${size / 2 - 2}\"\n        fill=\"${color}\"\n        fill-opacity=\"${opacity}\"\n        stroke=\"white\"\n        stroke-width=\"2\"\n      />\n    </svg>\n  `);\n  return `data:image/svg+xml;base64,${svg}`;\n};\nconst CLUSTER_STYLES = [{\n  textColor: 'white',\n  height: 40,\n  width: 40,\n  anchorText: [-5, 0],\n  textSize: 13,\n  url: createSvgClusterIcon(40, '#596FB7', 0.95)\n}, {\n  textColor: 'white',\n  height: 50,\n  width: 50,\n  anchorText: [-6, 0],\n  textSize: 14,\n  url: createSvgClusterIcon(50, '#11235A', 0.95)\n}, {\n  textColor: 'white',\n  height: 60,\n  width: 60,\n  anchorText: [-7, 0],\n  textSize: 16,\n  url: createSvgClusterIcon(60, '#11235A', 1)\n}];\nconst useMarkerClusterer = ({\n  mapRef,\n  facilities,\n  setSelectedFacility,\n  markerIcon\n}) => {\n  _s();\n  const clustererRef = useRef(null);\n  useEffect(() => {\n    var _mapRef$current, _mapRef$current$state;\n    if (!((_mapRef$current = mapRef.current) !== null && _mapRef$current !== void 0 && (_mapRef$current$state = _mapRef$current.state) !== null && _mapRef$current$state !== void 0 && _mapRef$current$state.map)) return;\n    const map = mapRef.current.state.map;\n\n    // 기존 클러스터러 정리\n    if (clustererRef.current) {\n      clustererRef.current.clearMarkers();\n    }\n\n    // 유효한 좌표를 가진 시설만 필터링\n    const validFacilityMarkers = facilities.filter(facility => facility.fcltyCrdntLa !== 0 && facility.fcltyCrdntLo !== 0).map(facility => {\n      const marker = new window.google.maps.Marker({\n        position: {\n          lat: Number(facility.fcltyCrdntLa),\n          lng: Number(facility.fcltyCrdntLo)\n        },\n        icon: markerIcon,\n        optimized: true\n      });\n      marker.addListener('click', () => {\n        setSelectedFacility(facility);\n      });\n      return marker;\n    });\n\n    // 새 클러스터러 생성\n    clustererRef.current = new MarkerClusterer({\n      map,\n      markers: validFacilityMarkers,\n      algorithm: new window.google.maps.SuperClusterAlgorithm({\n        radius: 60,\n        maxZoom: 15\n      }),\n      renderer: {\n        render: ({\n          count,\n          position\n        }, stats) => {\n          const index = stats.clusters.length > 100 ? 2 : stats.clusters.length > 50 ? 1 : 0;\n          const style = CLUSTER_STYLES[index];\n          const label = new window.google.maps.Marker({\n            position,\n            icon: style.url,\n            label: {\n              text: String(count),\n              color: style.textColor,\n              fontSize: `${style.textSize}px`,\n              fontWeight: '500'\n            },\n            zIndex: Number(window.google.maps.Marker.MAX_ZINDEX) + count\n          });\n          return label;\n        }\n      }\n    });\n    return () => {\n      if (clustererRef.current) {\n        clustererRef.current.clearMarkers();\n      }\n    };\n  }, [facilities, mapRef, setSelectedFacility, markerIcon]);\n  return clustererRef;\n};\n_s(useMarkerClusterer, \"IMRUIXsUmwVJPmbaT4ErJRM7+ik=\");\nexport default useMarkerClusterer;","map":{"version":3,"names":["useRef","useEffect","MarkerClusterer","createSvgClusterIcon","size","color","opacity","svg","window","btoa","CLUSTER_STYLES","textColor","height","width","anchorText","textSize","url","useMarkerClusterer","mapRef","facilities","setSelectedFacility","markerIcon","_s","clustererRef","_mapRef$current","_mapRef$current$state","current","state","map","clearMarkers","validFacilityMarkers","filter","facility","fcltyCrdntLa","fcltyCrdntLo","marker","google","maps","Marker","position","lat","Number","lng","icon","optimized","addListener","markers","algorithm","SuperClusterAlgorithm","radius","maxZoom","renderer","render","count","stats","index","clusters","length","style","label","text","String","fontSize","fontWeight","zIndex","MAX_ZINDEX"],"sources":["/Users/dgsw01/Documents/GitHub/Nurijang-web/src/hooks/useMarkerClusterer.js"],"sourcesContent":["// hooks/useMarkerClusterer.js\nimport { useRef, useEffect } from 'react';\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\n\nconst createSvgClusterIcon = (size, color, opacity) => {\n  const svg = window.btoa(`\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle \n        cx=\"${size/2}\" \n        cy=\"${size/2}\" \n        r=\"${size/2 - 2}\"\n        fill=\"${color}\"\n        fill-opacity=\"${opacity}\"\n        stroke=\"white\"\n        stroke-width=\"2\"\n      />\n    </svg>\n  `);\n  \n  return `data:image/svg+xml;base64,${svg}`;\n};\n\nconst CLUSTER_STYLES = [\n  {\n    textColor: 'white',\n    height: 40,\n    width: 40,\n    anchorText: [-5, 0],\n    textSize: 13,\n    url: createSvgClusterIcon(40, '#596FB7', 0.95),\n  },\n  {\n    textColor: 'white',\n    height: 50,\n    width: 50,\n    anchorText: [-6, 0],\n    textSize: 14,\n    url: createSvgClusterIcon(50, '#11235A', 0.95),\n  },\n  {\n    textColor: 'white',\n    height: 60,\n    width: 60,\n    anchorText: [-7, 0],\n    textSize: 16,\n    url: createSvgClusterIcon(60, '#11235A', 1),\n  }\n];\n\nconst useMarkerClusterer = ({ \n  mapRef, \n  facilities, \n  setSelectedFacility,\n  markerIcon\n}) => {\n  const clustererRef = useRef(null);\n\n  useEffect(() => {\n    if (!mapRef.current?.state?.map) return;\n\n    const map = mapRef.current.state.map;\n    \n    // 기존 클러스터러 정리\n    if (clustererRef.current) {\n      clustererRef.current.clearMarkers();\n    }\n\n    // 유효한 좌표를 가진 시설만 필터링\n    const validFacilityMarkers = facilities\n      .filter(facility => \n        facility.fcltyCrdntLa !== 0 && \n        facility.fcltyCrdntLo !== 0\n      )\n      .map(facility => {\n        const marker = new window.google.maps.Marker({\n          position: {\n            lat: Number(facility.fcltyCrdntLa),\n            lng: Number(facility.fcltyCrdntLo)\n          },\n          icon: markerIcon,\n          optimized: true\n        });\n\n        marker.addListener('click', () => {\n          setSelectedFacility(facility);\n        });\n\n        return marker;\n      });\n\n    // 새 클러스터러 생성\n    clustererRef.current = new MarkerClusterer({\n      map,\n      markers: validFacilityMarkers,\n      algorithm: new window.google.maps.SuperClusterAlgorithm({\n        radius: 60,\n        maxZoom: 15\n      }),\n      renderer: {\n        render: ({ count, position }, stats) => {\n          const index = stats.clusters.length > 100 ? 2 : \n                       stats.clusters.length > 50 ? 1 : 0;\n          const style = CLUSTER_STYLES[index];\n          \n          const label = new window.google.maps.Marker({\n            position,\n            icon: style.url,\n            label: {\n              text: String(count),\n              color: style.textColor,\n              fontSize: `${style.textSize}px`,\n              fontWeight: '500'\n            },\n            zIndex: Number(window.google.maps.Marker.MAX_ZINDEX) + count,\n          });\n\n          return label;\n        }\n      }\n    });\n\n    return () => {\n      if (clustererRef.current) {\n        clustererRef.current.clearMarkers();\n      }\n    };\n  }, [facilities, mapRef, setSelectedFacility, markerIcon]);\n\n  return clustererRef;\n};\n\nexport default useMarkerClusterer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}