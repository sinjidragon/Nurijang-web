{"ast":null,"code":"// 시설 데이터 검증 함수\nconst base_url=process.env.REACT_APP_BASE_URL;const validateFacility=facility=>{return{...facility,fcltyCrdntLa:facility.fcltyCrdntLa||0,fcltyCrdntLo:facility.fcltyCrdntLo||0,fcltyNm:facility.fcltyNm||'',fcltyAddr:facility.fcltyAddr||'',distance:facility.distance||0};};export const fetchNearbyFacilities=async location=>{try{const response=await fetch(`${base_url}/facilities`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({fcltyCrdntLo:Number(location.lng).toFixed(6),fcltyCrdntLa:Number(location.lat).toFixed(6)})});if(!response.ok)throw new Error('시설 정보를 가져오는데 실패했습니다.');const data=await response.json();// 응답 데이터 검증 및 정제\nreturn Array.isArray(data)?data.map(validateFacility):[];}catch(error){console.error('Facilities fetch error:',error);throw error;}};export const searchFacilities=async params=>{try{const{searchType,searchText,location}=params;const url=searchType==='item'?`${base_url}/search-item`:'/search';const response=await fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({fcltyCrdntLo:Number(location.lng).toFixed(6),fcltyCrdntLa:Number(location.lat).toFixed(6),searchText:searchText.trim()})});if(!response.ok)throw new Error('검색에 실패했습니다.');const data=await response.json();// 응답 데이터 검증 및 정제\nreturn Array.isArray(data)?data.map(validateFacility):[];}catch(error){console.error('Search error:',error);throw error;}};export const fetchSuggestions=async(searchText,location)=>{try{if(!(searchText!==null&&searchText!==void 0&&searchText.trim()))return null;const response=await fetch(`${base_url}/suggestions`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({fcltyCrdntLo:Number(location.lng).toFixed(6),fcltyCrdntLa:Number(location.lat).toFixed(6),searchText:searchText.trim()})});if(!response.ok)throw new Error('추천 검색어를 가져오는데 실패했습니다.');const data=await response.json();// 시설 목록이 있는 경우에만 검증 및 정제\nif(data!==null&&data!==void 0&&data.facilities){data.facilities=data.facilities.map(validateFacility);}return data;}catch(error){console.error('Suggestions fetch error:',error);throw error;}};","map":{"version":3,"names":["base_url","process","env","REACT_APP_BASE_URL","validateFacility","facility","fcltyCrdntLa","fcltyCrdntLo","fcltyNm","fcltyAddr","distance","fetchNearbyFacilities","location","response","fetch","method","headers","body","JSON","stringify","Number","lng","toFixed","lat","ok","Error","data","json","Array","isArray","map","error","console","searchFacilities","params","searchType","searchText","url","trim","fetchSuggestions","facilities"],"sources":["/Users/dgsw01/Documents/GitHub/Nurijang-web/src/services/api.js"],"sourcesContent":["// 시설 데이터 검증 함수\nconst base_url = process.env.REACT_APP_BASE_URL;\nconst validateFacility = (facility) => {\n    return {\n      ...facility,\n      fcltyCrdntLa: facility.fcltyCrdntLa || 0,\n      fcltyCrdntLo: facility.fcltyCrdntLo || 0,\n      fcltyNm: facility.fcltyNm || '',\n      fcltyAddr: facility.fcltyAddr || '',\n      distance: facility.distance || 0\n    };\n  };\n  \n  export const fetchNearbyFacilities = async (location) => {\n    try {\n      const response = await fetch(`${base_url}/facilities`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fcltyCrdntLo: Number(location.lng).toFixed(6),\n          fcltyCrdntLa: Number(location.lat).toFixed(6)\n        })\n      });\n  \n      if (!response.ok) throw new Error('시설 정보를 가져오는데 실패했습니다.');\n      const data = await response.json();\n      \n      // 응답 데이터 검증 및 정제\n      return Array.isArray(data) ? data.map(validateFacility) : [];\n    } catch (error) {\n      console.error('Facilities fetch error:', error);\n      throw error;\n    }\n  };\n  \n  export const searchFacilities = async (params) => {\n    try {\n      const { searchType, searchText, location } = params;\n      const url = searchType === 'item' ? `${base_url}/search-item` : '/search';\n      \n      const response = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fcltyCrdntLo: Number(location.lng).toFixed(6),\n          fcltyCrdntLa: Number(location.lat).toFixed(6),\n          searchText: searchText.trim()\n        })\n      });\n  \n      if (!response.ok) throw new Error('검색에 실패했습니다.');\n      const data = await response.json();\n      \n      // 응답 데이터 검증 및 정제\n      return Array.isArray(data) ? data.map(validateFacility) : [];\n    } catch (error) {\n      console.error('Search error:', error);\n      throw error;\n    }\n  };\n  \n  export const fetchSuggestions = async (searchText, location) => {\n    try {\n      if (!searchText?.trim()) return null;\n      \n      const response = await fetch(`${base_url}/suggestions`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fcltyCrdntLo: Number(location.lng).toFixed(6),\n          fcltyCrdntLa: Number(location.lat).toFixed(6),\n          searchText: searchText.trim()\n        })\n      });\n  \n      if (!response.ok) throw new Error('추천 검색어를 가져오는데 실패했습니다.');\n      const data = await response.json();\n      \n      // 시설 목록이 있는 경우에만 검증 및 정제\n      if (data?.facilities) {\n        data.facilities = data.facilities.map(validateFacility);\n      }\n      \n      return data;\n    } catch (error) {\n      console.error('Suggestions fetch error:', error);\n      throw error;\n    }\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}