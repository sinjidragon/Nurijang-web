{"ast":null,"code":"var _jsxFileName = \"/Users/dgsw01/Documents/GitHub/Nurijang-web/src/components/FacilityCard.js\";\nimport React from 'react';\nimport { formatDistance, formatPhoneNumber } from '../utils/formatters';\nimport './FacilityCard.css';\n\n// calculateDistance 함수를 api.js에서 가져옴\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // 지구의 반지름 (km)\n  const dLat = deg2rad(lat2 - lat1);\n  const dLon = deg2rad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\nconst deg2rad = deg => {\n  return deg * (Math.PI / 180);\n};\nconst FacilityCard = ({\n  facility,\n  onClose,\n  userLocation\n}) => {\n  const distanceText = facility.distance ? formatDistance(facility.distance) : userLocation && facility.fcltyCrdntLa && facility.fcltyCrdntLo ? formatDistance(calculateDistance(userLocation.lat, userLocation.lng, Number(facility.fcltyCrdntLa), Number(facility.fcltyCrdntLo))) : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"facility-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-button\",\n      onClick: onClose,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: facility.fcltyNm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"address\",\n      children: [facility.fcltyAddr, \" \", facility.fcltyDetailAddr]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), facility.rprsntvTelNo && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"phone\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `tel:${facility.rprsntvTelNo}`,\n        children: formatPhoneNumber(facility.rprsntvTelNo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), facility.mainItemNm && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"main-item\",\n      children: facility.mainItemNm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), distanceText && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"distance\",\n      children: [\"\\uD604\\uC7AC \\uC704\\uCE58\\uC5D0\\uC11C \", distanceText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = FacilityCard;\nexport default FacilityCard;\nvar _c;\n$RefreshReg$(_c, \"FacilityCard\");","map":{"version":3,"names":["React","formatDistance","formatPhoneNumber","jsxDEV","_jsxDEV","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","deg","PI","FacilityCard","facility","onClose","userLocation","distanceText","distance","fcltyCrdntLa","fcltyCrdntLo","lat","lng","Number","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fcltyNm","fcltyAddr","fcltyDetailAddr","rprsntvTelNo","href","mainItemNm","_c","$RefreshReg$"],"sources":["/Users/dgsw01/Documents/GitHub/Nurijang-web/src/components/FacilityCard.js"],"sourcesContent":["import React from 'react';\nimport { formatDistance, formatPhoneNumber } from '../utils/formatters';\nimport './FacilityCard.css';\n\n// calculateDistance 함수를 api.js에서 가져옴\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // 지구의 반지름 (km)\n  const dLat = deg2rad(lat2 - lat1);\n  const dLon = deg2rad(lon2 - lon1);\n  const a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n    Math.sin(dLon/2) * Math.sin(dLon/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n};\n\nconst deg2rad = (deg) => {\n  return deg * (Math.PI/180);\n};\n\nconst FacilityCard = ({ facility, onClose, userLocation }) => {\n  const distanceText = facility.distance \n    ? formatDistance(facility.distance)\n    : userLocation && facility.fcltyCrdntLa && facility.fcltyCrdntLo\n      ? formatDistance(calculateDistance(\n          userLocation.lat,\n          userLocation.lng,\n          Number(facility.fcltyCrdntLa),\n          Number(facility.fcltyCrdntLo)\n        ))\n      : '';\n\n  return (\n    <div className=\"facility-card\">\n      <button className=\"close-button\" onClick={onClose}>&times;</button>\n      <h3>{facility.fcltyNm}</h3>\n      <p className=\"address\">{facility.fcltyAddr} {facility.fcltyDetailAddr}</p>\n      {facility.rprsntvTelNo && (\n        <p className=\"phone\">\n          <a href={`tel:${facility.rprsntvTelNo}`}>\n            {formatPhoneNumber(facility.rprsntvTelNo)}\n          </a>\n        </p>\n      )}\n      {facility.mainItemNm && (\n        <p className=\"main-item\">{facility.mainItemNm}</p>\n      )}\n      {distanceText && (\n        <p className=\"distance\">현재 위치에서 {distanceText}</p>\n      )}\n    </div>\n  );\n};\n\nexport default FacilityCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,qBAAqB;AACvE,OAAO,oBAAoB;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpD,MAAMC,CAAC,GAAG,IAAI,CAAC,CAAC;EAChB,MAAMC,IAAI,GAAGC,OAAO,CAACJ,IAAI,GAAGF,IAAI,CAAC;EACjC,MAAMO,IAAI,GAAGD,OAAO,CAACH,IAAI,GAAGF,IAAI,CAAC;EACjC,MAAMO,CAAC,GACLC,IAAI,CAACC,GAAG,CAACL,IAAI,GAAC,CAAC,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACL,IAAI,GAAC,CAAC,CAAC,GACnCI,IAAI,CAACE,GAAG,CAACL,OAAO,CAACN,IAAI,CAAC,CAAC,GAAGS,IAAI,CAACE,GAAG,CAACL,OAAO,CAACJ,IAAI,CAAC,CAAC,GACjDO,IAAI,CAACC,GAAG,CAACH,IAAI,GAAC,CAAC,CAAC,GAAGE,IAAI,CAACC,GAAG,CAACH,IAAI,GAAC,CAAC,CAAC;EACrC,MAAMK,CAAC,GAAG,CAAC,GAAGH,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,IAAI,CAACN,CAAC,CAAC,EAAEC,IAAI,CAACK,IAAI,CAAC,CAAC,GAACN,CAAC,CAAC,CAAC;EACtD,OAAOJ,CAAC,GAAGQ,CAAC;AACd,CAAC;AAED,MAAMN,OAAO,GAAIS,GAAG,IAAK;EACvB,OAAOA,GAAG,IAAIN,IAAI,CAACO,EAAE,GAAC,GAAG,CAAC;AAC5B,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EAC5D,MAAMC,YAAY,GAAGH,QAAQ,CAACI,QAAQ,GAClC3B,cAAc,CAACuB,QAAQ,CAACI,QAAQ,CAAC,GACjCF,YAAY,IAAIF,QAAQ,CAACK,YAAY,IAAIL,QAAQ,CAACM,YAAY,GAC5D7B,cAAc,CAACI,iBAAiB,CAC9BqB,YAAY,CAACK,GAAG,EAChBL,YAAY,CAACM,GAAG,EAChBC,MAAM,CAACT,QAAQ,CAACK,YAAY,CAAC,EAC7BI,MAAM,CAACT,QAAQ,CAACM,YAAY,CAC9B,CAAC,CAAC,GACF,EAAE;EAER,oBACE1B,OAAA;IAAK8B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B/B,OAAA;MAAQ8B,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEX,OAAQ;MAAAU,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnEpC,OAAA;MAAA+B,QAAA,EAAKX,QAAQ,CAACiB;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3BpC,OAAA;MAAG8B,SAAS,EAAC,SAAS;MAAAC,QAAA,GAAEX,QAAQ,CAACkB,SAAS,EAAC,GAAC,EAAClB,QAAQ,CAACmB,eAAe;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzEhB,QAAQ,CAACoB,YAAY,iBACpBxC,OAAA;MAAG8B,SAAS,EAAC,OAAO;MAAAC,QAAA,eAClB/B,OAAA;QAAGyC,IAAI,EAAE,OAAOrB,QAAQ,CAACoB,YAAY,EAAG;QAAAT,QAAA,EACrCjC,iBAAiB,CAACsB,QAAQ,CAACoB,YAAY;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACJ,EACAhB,QAAQ,CAACsB,UAAU,iBAClB1C,OAAA;MAAG8B,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEX,QAAQ,CAACsB;IAAU;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAClD,EACAb,YAAY,iBACXvB,OAAA;MAAG8B,SAAS,EAAC,UAAU;MAAAC,QAAA,GAAC,wCAAQ,EAACR,YAAY;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAClD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACO,EAAA,GAhCIxB,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}