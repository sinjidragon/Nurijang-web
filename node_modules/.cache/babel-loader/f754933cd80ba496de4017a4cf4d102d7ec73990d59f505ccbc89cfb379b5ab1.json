{"ast":null,"code":"var _jsxFileName = \"/Users/dgsw01/Documents/GitHub/Nurijang-web/src/components/ChatContainer.js\",\n  _s = $RefreshSig$();\n// src/components/ChatContainer.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport MessageBubble from './MessageBubble';\nimport ChatInput from './ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = ({\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [threadId, setThreadId] = useState(null);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    const startChat = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/chat/start', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        setThreadId(data.id);\n        setMessages([{\n          id: 'initial',\n          type: 'assistant',\n          content: '안녕하세요! AI 누리입니다. 실시간으로 유익한 맞춤형 답변을 제공해요'\n        }]);\n      } catch (error) {\n        console.error('Chat initialization failed:', error);\n      }\n    };\n    startChat();\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const sendMessage = async text => {\n    if (!threadId || !text.trim()) return;\n    setMessages(prev => [...prev, {\n      id: Date.now(),\n      type: 'user',\n      content: text\n    }]);\n    try {\n      await fetch('http://localhost:8080/chat/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          threadId,\n          prompt: text\n        })\n      });\n      const response = await fetch(`http://localhost:8080/chat?threadId=${threadId}`);\n      const data = await response.json();\n      const lastMessage = data.data[data.data.length - 1];\n      setMessages(prev => [...prev, {\n        id: lastMessage.id,\n        type: 'assistant',\n        content: lastMessage.content[0].text.value\n      }]);\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"AI \\uB204\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        type: message.type,\n        content: message.content\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSend: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"feO593gq4ZGzgQm75ClkTe2TugU=\");\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MessageBubble","ChatInput","jsxDEV","_jsxDEV","ChatContainer","onClose","_s","messages","setMessages","threadId","setThreadId","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","startChat","response","fetch","method","headers","data","json","id","type","content","error","console","sendMessage","text","trim","prev","Date","now","body","JSON","stringify","prompt","lastMessage","length","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","ref","onSend","_c","$RefreshReg$"],"sources":["/Users/dgsw01/Documents/GitHub/Nurijang-web/src/components/ChatContainer.js"],"sourcesContent":["// src/components/ChatContainer.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport MessageBubble from './MessageBubble';\nimport ChatInput from './ChatInput';\n\nconst ChatContainer = ({ onClose }) => {\n  const [messages, setMessages] = useState([]);\n  const [threadId, setThreadId] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    const startChat = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/chat/start', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' }\n        });\n        const data = await response.json();\n        setThreadId(data.id);\n        \n        setMessages([{\n          id: 'initial',\n          type: 'assistant',\n          content: '안녕하세요! AI 누리입니다. 실시간으로 유익한 맞춤형 답변을 제공해요'\n        }]);\n      } catch (error) {\n        console.error('Chat initialization failed:', error);\n      }\n    };\n    startChat();\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const sendMessage = async (text) => {\n    if (!threadId || !text.trim()) return;\n\n    setMessages(prev => [...prev, {\n      id: Date.now(),\n      type: 'user',\n      content: text\n    }]);\n\n    try {\n      await fetch('http://localhost:8080/chat/send', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          threadId,\n          prompt: text\n        })\n      });\n\n      const response = await fetch(`http://localhost:8080/chat?threadId=${threadId}`);\n      const data = await response.json();\n      \n      const lastMessage = data.data[data.data.length - 1];\n      setMessages(prev => [...prev, {\n        id: lastMessage.id,\n        type: 'assistant',\n        content: lastMessage.content[0].text.value\n      }]);\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  return (\n    <div className=\"chat-popup\">\n      <div className=\"chat-header\">\n        <span>AI 누리</span>\n        <button className=\"close-button\" onClick={onClose}>×</button>\n      </div>\n      <div className=\"chat-messages\">\n        {messages.map(message => (\n          <MessageBubble \n            key={message.id}\n            type={message.type}\n            content={message.content}\n          />\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <ChatInput onSend={sendMessage} />\n    </div>\n  );\n};\n\nexport default ChatContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}