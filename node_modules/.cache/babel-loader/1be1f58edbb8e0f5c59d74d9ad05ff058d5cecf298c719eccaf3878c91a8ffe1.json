{"ast":null,"code":"var _jsxFileName = \"/Users/dgsw01/Desktop/nurijang/nurijang/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { API_BASE_URL, GOOGLE_MAPS_API_KEY } from './config';\nimport LoadingSpinner from './components/LoadingSpinner.js';\nimport FacilityCard from './components/FacilityCard';\nimport ErrorMessage from './components/ErrorMessage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [center, setCenter] = useState({\n    lat: 37.5665,\n    lng: 126.9780\n  });\n  const [facilities, setFacilities] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedFacility, setSelectedFacility] = useState(null);\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n  const getCurrentLocation = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n      const location = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      setUserLocation(location);\n      setCenter(location);\n      await fetchNearbyFacilities(location);\n    } catch (error) {\n      setError(\"위치 정보를 가져올 수 없습니다. 위치 서비스가 활성화되어 있는지 확인해주세요.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchNearbyFacilities = async location => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/facilities/nearby`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fcltyCrdntLo: location.lng,\n          fcltyCrdntLa: location.lat\n        })\n      });\n      if (!response.ok) {\n        throw new Error('서버에서 데이터를 가져오는데 실패했습니다.');\n      }\n      const data = await response.json();\n      setFacilities(data);\n    } catch (error) {\n      setError(error.message);\n      setFacilities([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC2DC\\uC124\\uBA85 \\uD639\\uC740 \\uC8FC\\uC18C \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error,\n      onClose: () => setError(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"my-location-button\",\n      onClick: getCurrentLocation,\n      disabled: loading,\n      children: \"\\uB0B4 \\uC704\\uCE58 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapStyles,\n        zoom: 15,\n        center: center,\n        onClick: () => setSelectedFacility(null),\n        children: [userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userLocationIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 28\n        }, this), facilities.map(facility => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: facility.fcltyCrdntLa,\n            lng: facility.fcltyCrdntLo\n          },\n          icon: facilityIcon,\n          onClick: () => setSelectedFacility(facility)\n        }, facility.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), selectedFacility && /*#__PURE__*/_jsxDEV(FacilityCard, {\n      facility: selectedFacility,\n      onClose: () => setSelectedFacility(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qtv0MSaRFffGDa2d2nRmkrQl3ls=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Marker","API_BASE_URL","GOOGLE_MAPS_API_KEY","LoadingSpinner","FacilityCard","ErrorMessage","jsxDEV","_jsxDEV","App","_s","center","setCenter","lat","lng","facilities","setFacilities","userLocation","setUserLocation","loading","setLoading","error","setError","selectedFacility","setSelectedFacility","mapStyles","height","width","getCurrentLocation","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","location","coords","latitude","longitude","fetchNearbyFacilities","response","fetch","method","headers","body","JSON","stringify","fcltyCrdntLo","fcltyCrdntLa","ok","Error","data","json","message","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onClick","disabled","googleMapsApiKey","mapContainerStyle","zoom","icon","userLocationIcon","map","facility","facilityIcon","id","_c","$RefreshReg$"],"sources":["/Users/dgsw01/Desktop/nurijang/nurijang/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { API_BASE_URL, GOOGLE_MAPS_API_KEY } from './config';\nimport LoadingSpinner from './components/LoadingSpinner.js';\nimport FacilityCard from './components/FacilityCard';\nimport ErrorMessage from './components/ErrorMessage';\nimport './App.css';\n\nconst App = () => {\n  const [center, setCenter] = useState({\n    lat: 37.5665,\n    lng: 126.9780\n  });\n  const [facilities, setFacilities] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedFacility, setSelectedFacility] = useState(null);\n\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n\n  const getCurrentLocation = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n\n      const location = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      setUserLocation(location);\n      setCenter(location);\n      await fetchNearbyFacilities(location);\n    } catch (error) {\n      setError(\"위치 정보를 가져올 수 없습니다. 위치 서비스가 활성화되어 있는지 확인해주세요.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchNearbyFacilities = async (location) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/facilities/nearby`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          fcltyCrdntLo: location.lng,\n          fcltyCrdntLa: location.lat\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('서버에서 데이터를 가져오는데 실패했습니다.');\n      }\n\n      const data = await response.json();\n      setFacilities(data);\n    } catch (error) {\n      setError(error.message);\n      setFacilities([]);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"search-bar\">\n        <input type=\"text\" placeholder=\"시설명 혹은 주소 검색\" />\n      </header>\n\n      {loading && <LoadingSpinner />}\n      {error && <ErrorMessage message={error} onClose={() => setError(null)} />}\n      \n      <button \n        className=\"my-location-button\"\n        onClick={getCurrentLocation}\n        disabled={loading}\n      >\n        내 위치 보기\n      </button>\n\n      <LoadScript googleMapsApiKey={GOOGLE_MAPS_API_KEY}>\n        <GoogleMap\n          mapContainerStyle={mapStyles}\n          zoom={15}\n          center={center}\n          onClick={() => setSelectedFacility(null)}\n        >\n          {userLocation && <Marker position={userLocation} icon={userLocationIcon} />}\n          \n          {facilities.map((facility) => (\n            <Marker\n              key={facility.id}\n              position={{\n                lat: facility.fcltyCrdntLa,\n                lng: facility.fcltyCrdntLo\n              }}\n              icon={facilityIcon}\n              onClick={() => setSelectedFacility(facility)}\n            />\n          ))}\n        </GoogleMap>\n      </LoadScript>\n\n      {selectedFacility && (\n        <FacilityCard \n          facility={selectedFacility}\n          onClose={() => setSelectedFacility(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}