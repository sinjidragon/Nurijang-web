{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { calculateDistance } from '../utils/coordinates';\nexport const useSearch = userLocation => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const [suggestions, setSuggestions] = useState(null);\n  const [showSearchPanel, setShowSearchPanel] = useState(false);\n  const searchPanelRef = useRef(null);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (searchPanelRef.current && !searchPanelRef.current.contains(event.target)) {\n        setShowSearchPanel(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // suggestions를 설정할 때 위치 정보 포함\n  const setSuggestionsWithLocation = data => {\n    if (!data) {\n      setSuggestions(null);\n      return;\n    }\n\n    // API 응답 구조 처리\n    const result = {\n      mainItems: data.mainItems || [],\n      facilities: []\n    };\n\n    // facilities가 있고 배열인 경우에만 처리\n    if (data.facilities && Array.isArray(data.facilities)) {\n      result.facilities = data.facilities.map(facility => {\n        let distance = 0;\n        if (userLocation && facility.fcltyCrdntLa && facility.fcltyCrdntLo) {\n          distance = calculateDistance(userLocation.lat, userLocation.lng, Number(facility.fcltyCrdntLa), Number(facility.fcltyCrdntLo));\n        }\n        return {\n          ...facility,\n          distance\n        };\n      });\n\n      // 거리순으로 정렬\n      result.facilities.sort((a, b) => a.distance - b.distance);\n    }\n    setSuggestions(result);\n  };\n  const resetSearchPanel = () => {\n    setShowSearchPanel(false);\n  };\n  return {\n    searchText,\n    setSearchText,\n    suggestions,\n    setSuggestions: setSuggestionsWithLocation,\n    showSearchPanel,\n    setShowSearchPanel,\n    searchPanelRef,\n    resetSearchPanel\n  };\n};\n_s(useSearch, \"Oj/56eBoe3OVXTJlltl2qGstwt4=\");","map":{"version":3,"names":["useState","useEffect","useRef","calculateDistance","useSearch","userLocation","_s","searchText","setSearchText","suggestions","setSuggestions","showSearchPanel","setShowSearchPanel","searchPanelRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","setSuggestionsWithLocation","data","result","mainItems","facilities","Array","isArray","map","facility","distance","fcltyCrdntLa","fcltyCrdntLo","lat","lng","Number","sort","a","b","resetSearchPanel"],"sources":["/Users/dgsw01/Documents/GitHub/Nurijang-web/src/hooks/useSearch.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { calculateDistance } from '../utils/coordinates';\n\nexport const useSearch = (userLocation) => {\n  const [searchText, setSearchText] = useState('');\n  const [suggestions, setSuggestions] = useState(null);\n  const [showSearchPanel, setShowSearchPanel] = useState(false);\n  const searchPanelRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (searchPanelRef.current && !searchPanelRef.current.contains(event.target)) {\n        setShowSearchPanel(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // suggestions를 설정할 때 위치 정보 포함\n  const setSuggestionsWithLocation = (data) => {\n    if (!data) {\n      setSuggestions(null);\n      return;\n    }\n\n    // API 응답 구조 처리\n    const result = {\n      mainItems: data.mainItems || [],\n      facilities: []\n    };\n\n    // facilities가 있고 배열인 경우에만 처리\n    if (data.facilities && Array.isArray(data.facilities)) {\n      result.facilities = data.facilities.map(facility => {\n        let distance = 0;\n        if (userLocation && facility.fcltyCrdntLa && facility.fcltyCrdntLo) {\n          distance = calculateDistance(\n            userLocation.lat,\n            userLocation.lng,\n            Number(facility.fcltyCrdntLa),\n            Number(facility.fcltyCrdntLo)\n          );\n        }\n        return {\n          ...facility,\n          distance\n        };\n      });\n\n      // 거리순으로 정렬\n      result.facilities.sort((a, b) => a.distance - b.distance);\n    }\n\n    setSuggestions(result);\n  };\n\n  const resetSearchPanel = () => {\n    setShowSearchPanel(false);\n  };\n\n  return {\n    searchText,\n    setSearchText,\n    suggestions,\n    setSuggestions: setSuggestionsWithLocation,\n    showSearchPanel,\n    setShowSearchPanel,\n    searchPanelRef,\n    resetSearchPanel\n  };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,iBAAiB,QAAQ,sBAAsB;AAExD,OAAO,MAAMC,SAAS,GAAIC,YAAY,IAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMa,cAAc,GAAGX,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd,MAAMa,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAIF,cAAc,CAACG,OAAO,IAAI,CAACH,cAAc,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QAC5EN,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC;IAEDO,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAMK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,0BAA0B,GAAIC,IAAI,IAAK;IAC3C,IAAI,CAACA,IAAI,EAAE;MACTb,cAAc,CAAC,IAAI,CAAC;MACpB;IACF;;IAEA;IACA,MAAMc,MAAM,GAAG;MACbC,SAAS,EAAEF,IAAI,CAACE,SAAS,IAAI,EAAE;MAC/BC,UAAU,EAAE;IACd,CAAC;;IAED;IACA,IAAIH,IAAI,CAACG,UAAU,IAAIC,KAAK,CAACC,OAAO,CAACL,IAAI,CAACG,UAAU,CAAC,EAAE;MACrDF,MAAM,CAACE,UAAU,GAAGH,IAAI,CAACG,UAAU,CAACG,GAAG,CAACC,QAAQ,IAAI;QAClD,IAAIC,QAAQ,GAAG,CAAC;QAChB,IAAI1B,YAAY,IAAIyB,QAAQ,CAACE,YAAY,IAAIF,QAAQ,CAACG,YAAY,EAAE;UAClEF,QAAQ,GAAG5B,iBAAiB,CAC1BE,YAAY,CAAC6B,GAAG,EAChB7B,YAAY,CAAC8B,GAAG,EAChBC,MAAM,CAACN,QAAQ,CAACE,YAAY,CAAC,EAC7BI,MAAM,CAACN,QAAQ,CAACG,YAAY,CAC9B,CAAC;QACH;QACA,OAAO;UACL,GAAGH,QAAQ;UACXC;QACF,CAAC;MACH,CAAC,CAAC;;MAEF;MACAP,MAAM,CAACE,UAAU,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACP,QAAQ,GAAGQ,CAAC,CAACR,QAAQ,CAAC;IAC3D;IAEArB,cAAc,CAACc,MAAM,CAAC;EACxB,CAAC;EAED,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B5B,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,OAAO;IACLL,UAAU;IACVC,aAAa;IACbC,WAAW;IACXC,cAAc,EAAEY,0BAA0B;IAC1CX,eAAe;IACfC,kBAAkB;IAClBC,cAAc;IACd2B;EACF,CAAC;AACH,CAAC;AAAClC,EAAA,CArEWF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}